<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.StudentExamVoMapper">
    <resultMap id="studentExamVoResultMap" type="org.example.vo.StudentExamVo">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="sex" column="sex"/>
        <result property="age" column="age"/>
        <collection property="examList" ofType="org.example.entity.Exam">
            <id property="id" column="e_id"/>
            <result property="studentId" column="student_id"/>
            <result property="course" column="course"/>
            <result property="score" column="score"/>
        </collection>
    </resultMap>

    <!--简单结构直接映射，不写association-->
    <!--写association会造成一行数据映射一个list，不会有分组的效果-->
    <!--一对多关系中，先做student的limit，在做where判断，防止取5行实际只有两行的情况-->
    <select id="selectList" resultMap="studentExamVoResultMap">
        select s.id, s.name, s.sex, s.age, e.id as e_id, e.student_id, e.course, e.score
            from (
                select *
                    from student
                    ${ew.custiomSqlSegment}
                    limit #{rowNum}, #{offset}
            ) as s join exam as e
            on s.id = e.student_id
            ${ew.customSqlSegment}
    </select>

    <select id="selectCount" resultType="java.lang.Long">
        select count(*)
            from student as s join exam as e
            on s.id = e.student_id
            ${ew.customSqlSegment}
    </select>
</mapper>
